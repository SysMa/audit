@node Keywords, Prompt codes, , Configuration
@section Keywords

The configuration file consists of keywords with an argument,
separated with a space. There are three types of arguments: strings,
booleans and integers.  Strings must be enclosed in quotes if they
contains spaces. Boolean arguments can be written as 0/1, true/false
or on/off. The keywords are case insensitive.

These are the supported keywords:

@table @code

@item anon_password
type: string

This is the password used for anonymous logins. It should be your email
address.

@item autologin
type: boolean

Setting this to true will cause yafc to attempt to login
automatically.  Information for doing this is specified by
@xref{Bookmarks}.

@item autoreconnect
type: boolean

If this option is true, yafc will try to reconnect the currently open
connection if it has timed out. The directory cache is retained after
a successful reconnect.

@item quit_on_eof
type: boolean

Quits yafc on end-of-file (usually @kbd{Ctrl-D}).

@item read_netrc
type: boolean

Read additional autologin entries from @file{~/.netrc}.
@ref{Bookmarks}.

@item use_passive_mode
type: boolean

If true, use passive mode data connections. You might have to do this
if you are behind a proxy.

@item reverse_dns
type: boolean

If this option is true, IP addresses will be reverse looked up in the
DNS for a hostname, which can be slow. Set to false to skip this.

@item waiting_dots
type: boolean

If this option is true, filenames will be completed with ... while
waiting for the directory listing to be downloaded.

@item cache_timeout
type: integer

Time (in seconds) before a cached directory times out and needs to be
reread. Set to 0 (zero) to disable the timeout.

@item verbose
type: boolean

Show all replies received from remote host.

@item debug
type: boolean

Show exactly what is going on. Prints all FTP commands sent to remote
host and all replies received, including response code.

@item trace
type: string

Create trace files in @file{~/.yafc/trace/trace.<pid>}.

@item ssh_program
type: string

Path to local ssh program which will be used in SSH2 connections. Note
that only SSH version 2 is supported.

@item ssh_options
type: string

Custom options that will be passed to the SSH program.

@item sftp_server_program
type: string

Path to remote sftp-server program. Leave commented to use the sftp
subsystem. See also @ref{open}.

@item inhibit_startup_syst
type: boolean

Set to true to skip query of remote system on connect.

@item use_env_string
type: boolean

Alter the environment strings to reflect what Yafc is doing.
This information can be seen with the shell command @code{ps}.

@item remote_completion
type: boolean

Use tab to complete remote files. Yeahh.

@item auto_bookmark
type: yes/no/ask

If set to @code{yes}, Yafc automatically creates a bookmarks for the
site when the connection is closed. Setting this to @code{ask}, makes
yafc ask if to create the bookmark.

The bookmark is given an appropriate default aliases name.

@item auto_bookmark_update
type: yes/no/ask

If set to @code{yes}, yafc will always update an existing bookmark
when the connection is closed, if not the @code{noupdate} flag has
been set, see the @code{noupdate} keyword in @xref{Bookmark keywords}.

@item auto_bookmark_save_password
type: boolean

If set to @code{yes}, Yafc don't ask whether to save passwords
in the bookmarks file. Anonymous password, though, are always saved.

Passwords in the bookmarks file are stored either as clear text
or base64-encoded. Be sure the file is not world readable (@code{chmod 0600 bookmarks}.)

@item auto_bookmark_silent
type: boolean

If set to @code{true}, Yafc won't say anything about automatically created
bookmarks.

@item default_type
type: string

Specifies the default type used for file transfers, either
@code{binary} or @code{ascii}. Setting this to @code{ascii}
can mess up binary files (ascii mode rewrites the end-of-line characters).

@item default_mechanism
type: string

This option specifies which security mechanisms to try, in given order.
It is a colon-separated string, supported values are "krb4", "krb5" and "none".
Example: @code{default_mechanism "krb4:krb5"}

@item ascii_transfer_mask
type: string

Filenames matching any of these filemasks are always
transferred in @code{ascii} mode, regardless of the value of
the @code{default_type} keyword. This can be overridden with
the @samp{--type} option to get/put.

Masks are separated by colons (eg. @code{*.ext1:*.ext2:filename*})
and are case sensitive. This option can be specified multiple times;
masks will be appended.

Preferrably used with @code{default_type} set to @code{binary}.

@item transfer_first_mask
type: string

Filenames matching any of these masks are transferred before other
files. 

Masks are separated by colons (eg. @code{*.sfv:*.nfo:README*:md5sum*})
and are case sensitive. This option can be specified multiple times;
masks will be appended.

@item beep_after_long_command
type: boolean

Beep after a long command is finished. Use @code{long_command_time}
to specify how long a @samp{long} command is.

@item long_command_time
type: integer

Number of seconds for command to become @samp{long}

@item command_timeout
type: integer

How long (in seconds) before aborting a command without response.

@item connection_timeout
type: integer

How long (in seconds) before aborting a connection without response.

@item connect_attempts
type: integer

Number of times to try to re-connect if login failed (due to busy server.)
Use the value -1 for unlimited number of tries, and 0 to disable this feature.

@item connect_wait_time
type: integer

Number of seconds to wait between connection attempts.

@item use_history
type: boolean

Save and load history lines in @file{~/.yafc/history}.
This is a no-op if not compiled with Readline.

@item history_max
type: integer

Max number of history lines to save in the history file.
This is a no-op if not compiled with Readline.

@item startup_local_directory
type: string

Yafc will change to this (local) directory upon startup.

@item nohup_mailaddress
type: string

If set, Yafc sends mail to this address when nohup transfers are finished.
@ref{Nohup transfers}.

@item sendmail_path
type: string

Complete path to sendmail used by @samp{nohup_mailaddress} above.

@item prompt1
type: string

This prompt is printed when no connection is established.

See @ref{Prompt codes}.

You can put escape codes here, for example if you want a colored prompt
"%@{\e[01;31m%@}ftp%@{\e[0m%@}" will be "ftp" in red, if your terminal supports
ISO 6429 (ANSI) color codes. @ref{Colors}.

@item prompt2
type: string

connected but not logged in.

@item prompt3
type: string

connected and logged in

@item transfer_begin_string
type: string

This string is printed before the actual transfer begins.

These strings are printed with the @samp{--verbose} option to get/put.

@ref{Transfer codes} for special character codes that can be used in
this string to show dynamic information.

@item transfer_string
type: string

This string is printed (approx.) every second or so during the transfer
with a trailing carriage return.

@ref{Transfer codes} for special character codes that can be used in
this string to show dynamic information.

@item transfer_end_string
type: string

This string is printed when the transfer is finished.

@ref{Transfer codes} for special character codes that can be used in
this string to show dynamic information.

@item transfer_xterm_string
type: string

This string is printed at the same time @samp{transfer_string} is printed,
if the current $TERM variable is defined in @samp{xterm_title_terms}. This
string can be used to reflect dynamic information about the current transfer
in the title bar of an Xterm.

@ref{Transfer codes} for special character codes that can be used in
this string to show dynamic information.

@item tilde
type: boolean

Display ~ instead of full home directory path for various commands.

@item xterm_title1
type: string

Xterm window titles

same codes as for the prompts, see @xref{Prompt codes}.

This is an excerpt from the Xterm-title mini-HOWTO:
@quotation
Many people find it useful to set the title of a terminal to reflect
dynamic information, such as the name of the host the user is logged
into, the current working directory, etc.

This may be done by using XTerm escape sequences. The following
sequences are useful in this respect:

@table @code

@item ESC]0;_string_BEL
Set icon name and window title to _string_

@item ESC]1;_string_BEL
Set icon name to _string_

@item ESC]2;_string_BEL
Set window title to _string_

@end table

where @code{ESC} is the _escape_ character (\033), and @code{BEL} is the _bell_
character (\007).

_Note_: these sequences apply to most xterm derivatives, such as
nxterm, color-xterm and rxvt. Other terminal types often use different
escapes; see the appendix for examples. For the full list of xterm
escape sequences see the file ctlseq2.txt, which comes with the xterm
distribution, or xterm.seq, which comes with the rxvt distribution.

These escapes really need to be applied every time the prompt changes.
This way the string is updated with every command you issue and can
keep track of information such as current working directory, username,
hostname, etc.
@end quotation

Example: @code{xterm_title1 "\e]0;Yafc\x07"} sets the xterm window title and
icon name to @code{Yafc}.

@item xterm_title2
type: string

Example: @code{xterm_title1 "\e]0:Yafc - %h\x07"} sets the xterm window title
and icon name to @code{Yafc - @var{hostname}}.

@item xterm_title3
type: string

Example: @code{xterm_title1 "\e]0;Yafc - %u@@%h:%~\x07"} sets the xterm window
title and icon name to @code{Yafc - @var{user}@@@var{hostname}:@var{directory}}.

@item xterm_title_terms
type: string

List of $TERM's, separated with spaces, which can handle xterm
escape sequences.

@end table
